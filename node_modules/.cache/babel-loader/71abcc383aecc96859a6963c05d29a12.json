{"ast":null,"code":"var _jsxFileName = \"/Users/htoomyat/Downloads/CS124/cs124-lab2/src/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport './todo-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  // eslint-disable-next-line no-unused-vars\n  const [isAddClicked, setIsAddClicked] = useState(false);\n  const [newItemNameInput, setNewItemNameInput] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [props.data.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n        name: item.itemName,\n        id: item.id,\n        status: item.itemStatus,\n        onItemChange: props.onItemChange\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)), isAddClicked === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"new-item\",\n          id: \"new-item\",\n          onChange: value => setNewItemNameInput(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onItemAdd(newItemNameInput),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsAddClicked(true),\n        children: \"Add A Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoList, \"GewzNwh0lFOu5HaFNC5g2O704JE=\");\n\n_c = TodoList;\nTodoList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onItemChange: PropTypes.func,\n  onItemAdd: PropTypes.func\n};\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/htoomyat/Downloads/CS124/cs124-lab2/src/TodoList.jsx"],"names":["React","useState","PropTypes","TodoItem","TodoList","props","isAddClicked","setIsAddClicked","newItemNameInput","setNewItemNameInput","data","map","item","itemName","id","itemStatus","onItemChange","value","onItemAdd","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,iBACGI,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAgBC,IAAD,iBACd,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACC,QAFb;AAGE,QAAA,EAAE,EAAED,IAAI,CAACE,EAHX;AAIE,QAAA,MAAM,EAAEF,IAAI,CAACG,UAJf;AAKE,QAAA,YAAY,EAAEV,KAAK,CAACW;AALtB,SACOJ,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAUGR,YAAY,KAAK,IAAjB,gBACC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,QAAQ,EAAGW,KAAD,IAAWR,mBAAmB,CAACQ,KAAD;AAJ1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAQ,UAAA,OAAO,EAAEZ,KAAK,CAACa,SAAN,CAAgBV,gBAAhB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAWC;AAAK,QAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4BD,CAhCD;;GAAMH,Q;;KAAAA,Q;AAkCNA,QAAQ,CAACe,SAAT,GAAqB;AACnBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,KAAV,CAAgBC,UADH;AAEnBL,EAAAA,YAAY,EAAEd,SAAS,CAACoB,IAFL;AAGnBJ,EAAAA,SAAS,EAAEhB,SAAS,CAACoB;AAHF,CAArB;AAMA,eAAelB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\nimport './todo-list.css';\n\nconst TodoList = (props) => {\n  // eslint-disable-next-line no-unused-vars\n  const [isAddClicked, setIsAddClicked] = useState(false);\n  const [newItemNameInput, setNewItemNameInput] = useState('');\n  return (\n    <>\n      <div className=\"list-container\">\n        {props.data.map((item) => (\n          <TodoItem\n            key={item.id}\n            name={item.itemName}\n            id={item.id}\n            status={item.itemStatus}\n            onItemChange={props.onItemChange}\n          />\n        ))}\n        {isAddClicked === true ? (\n          <div>\n            <input\n              type=\"text\"\n              name=\"new-item\"\n              id=\"new-item\"\n              onChange={(value) => setNewItemNameInput(value)}\n            />\n            <button onClick={props.onItemAdd(newItemNameInput)}>Add</button>\n          </div>\n        ) : (\n          <div onClick={() => setIsAddClicked(true)}>Add A Task</div>\n        )}\n      </div>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onItemChange: PropTypes.func,\n  onItemAdd: PropTypes.func\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}