{"ast":null,"code":"import _toConsumableArray from\"/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{generateUniqueID}from'web-vitals/dist/modules/lib/generateUniqueID';import TodoList from'./TodoList';import MenuPopupState from'./Menu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var INITIAL_DATA=[{itemName:'default item',itemStatus:false,id:generateUniqueID()},{itemName:'another item',itemStatus:false,id:generateUniqueID()},{itemName:'and another item',itemStatus:true,id:generateUniqueID()}];var App=function App(){// TO ASK should this be in app or todolist\n// here, todoitems update -> whole list rerender?\n// in todolist, only updated items rerender?\nvar _useState=useState(INITIAL_DATA),_useState2=_slicedToArray(_useState,2),todoItems=_useState2[0],setTodoItems=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAddClicked=_useState4[0],setIsAddClicked=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newItemNameInput=_useState6[0],setNewItemNameInput=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isCompletedShown=_useState8[0],setIsCompletedShown=_useState8[1];var handleItemChange=function handleItemChange(id,field,value){var newTodoItems=todoItems.map(function(item){return item.id===id?_objectSpread(_objectSpread({},item),{},_defineProperty({},field,value)):item;});setTodoItems(newTodoItems);};var handleItemAdd=function handleItemAdd(name){setTodoItems([].concat(_toConsumableArray(todoItems),[{itemName:name,itemStatus:false,id:generateUniqueID()}]));setIsAddClicked(false);setNewItemNameInput('');};var handleToggleShowCompleted=function handleToggleShowCompleted(){setIsCompletedShown(function(prevState){return!prevState;});};var handleDeleteCompleted=function handleDeleteCompleted(){var newData=todoItems.filter(function(item){return item.itemStatus===false;});setTodoItems(newData);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(TodoList,{data:todoItems,onItemChange:handleItemChange,onItemAdd:handleItemAdd,isCompletedShown:isCompletedShown}),isAddClicked===true?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"new-item\",id:\"new-item\",value:newItemNameInput,onChange:function onChange(e){return setNewItemNameInput(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleItemAdd(newItemNameInput);},children:\"Add\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"add-button\",onClick:function onClick(){return setIsAddClicked(true);},children:\"Add A Task\"}),/*#__PURE__*/_jsx(MenuPopupState,{isCompletedShown:isCompletedShown,onToggleShowCompleted:handleToggleShowCompleted,onDeleteCompleted:handleDeleteCompleted})]})});};export default App;","map":{"version":3,"sources":["/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/src/App.jsx"],"names":["React","useState","generateUniqueID","TodoList","MenuPopupState","INITIAL_DATA","itemName","itemStatus","id","App","todoItems","setTodoItems","isAddClicked","setIsAddClicked","newItemNameInput","setNewItemNameInput","isCompletedShown","setIsCompletedShown","handleItemChange","field","value","newTodoItems","map","item","handleItemAdd","name","handleToggleShowCompleted","prevState","handleDeleteCompleted","newData","filter","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { generateUniqueID } from 'web-vitals/dist/modules/lib/generateUniqueID';\n\nimport TodoList from './TodoList';\nimport MenuPopupState from './Menu';\n\nconst INITIAL_DATA = [\n  {\n    itemName: 'default item',\n    itemStatus: false,\n    id: generateUniqueID()\n  },\n  {\n    itemName: 'another item',\n    itemStatus: false,\n    id: generateUniqueID()\n  },\n  {\n    itemName: 'and another item',\n    itemStatus: true,\n    id: generateUniqueID()\n  }\n];\n\nconst App = () => {\n  // TO ASK should this be in app or todolist\n  // here, todoitems update -> whole list rerender?\n  // in todolist, only updated items rerender?\n  const [todoItems, setTodoItems] = useState(INITIAL_DATA);\n  const [isAddClicked, setIsAddClicked] = useState(false);\n  const [newItemNameInput, setNewItemNameInput] = useState('');\n  const [isCompletedShown, setIsCompletedShown] = useState(true);\n\n  const handleItemChange = (id, field, value) => {\n    const newTodoItems = todoItems.map((item) => {\n      return item.id === id ? { ...item, [field]: value } : item;\n    });\n    setTodoItems(newTodoItems);\n  };\n\n  const handleItemAdd = (name) => {\n    setTodoItems([...todoItems, { itemName: name, itemStatus: false, id: generateUniqueID() }]);\n    setIsAddClicked(false);\n    setNewItemNameInput('');\n  };\n\n  const handleToggleShowCompleted = () => {\n    setIsCompletedShown((prevState) => !prevState);\n  };\n\n  const handleDeleteCompleted = () => {\n    const newData = todoItems.filter((item) => item.itemStatus === false);\n    setTodoItems(newData);\n  };\n\n  return (\n    <>\n      <div className=\"app-container\">\n        <TodoList\n          data={todoItems}\n          onItemChange={handleItemChange}\n          onItemAdd={handleItemAdd}\n          isCompletedShown={isCompletedShown}\n        />\n        {isAddClicked === true ? (\n          <div>\n            <input\n              type=\"text\"\n              name=\"new-item\"\n              id=\"new-item\"\n              value={newItemNameInput}\n              onChange={(e) => setNewItemNameInput(e.target.value)}\n            />\n            <button onClick={() => handleItemAdd(newItemNameInput)}>Add</button>\n          </div>\n        ) : (\n          <div className=\"add-button\" onClick={() => setIsAddClicked(true)}>\n            Add A Task\n          </div>\n        )}\n        <MenuPopupState\n          isCompletedShown={isCompletedShown}\n          onToggleShowCompleted={handleToggleShowCompleted}\n          onDeleteCompleted={handleDeleteCompleted}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}