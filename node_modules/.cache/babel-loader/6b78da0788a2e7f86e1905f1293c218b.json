{"ast":null,"code":"import _slicedToArray from\"/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./todo-item.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoItem=function TodoItem(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),updatedName=_useState2[0],setUpdatedName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isRenameClicked=_useState4[0],setIsRenameClicked=_useState4[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"item-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"item \".concat(props.status===true?\"completed-item\":null),onClick:function onClick(){props.onItemChange(props.id,\"itemStatus\",props.status?false:true);},children:props.name}),isRenameClicked?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"updated-name\",id:\"updated-name\",value:updatedName,onChange:function onChange(e){setUpdatedName(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){props.onItemChange(props.id,\"itemName\",updatedName);setIsRenameClicked(false);},children:\"Rename\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setIsRenameClicked(function(prevState){return!prevState;});},children:\"Rename\"})]})});};export default TodoItem;","map":{"version":3,"sources":["/Users/htoomyat/Downloads/CS124/lab2-fork/cs124-lab2/src/TodoItem.jsx"],"names":["React","useState","TodoItem","props","updatedName","setUpdatedName","isRenameClicked","setIsRenameClicked","status","onItemChange","id","name","e","target","value","prevState"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAGA,MAAO,iBAAP,C,6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,cAAsCF,QAAQ,CAAC,EAAD,CAA9C,wCAAOG,WAAP,eAAoBC,cAApB,eACA,eAA8CJ,QAAQ,CAAC,KAAD,CAAtD,yCAAOK,eAAP,eAAwBC,kBAAxB,eACA,mBACE,sCACE,aAAK,SAAS,CAAC,gBAAf,wBACE,YACE,SAAS,gBAAUJ,KAAK,CAACK,MAAN,GAAiB,IAAjB,CAAwB,gBAAxB,CAA2C,IAArD,CADX,CAEE,OAAO,CAAE,kBAAM,CACbL,KAAK,CAACM,YAAN,CACEN,KAAK,CAACO,EADR,CAEE,YAFF,CAGEP,KAAK,CAACK,MAAN,CAAe,KAAf,CAAuB,IAHzB,EAKD,CARH,UAUGL,KAAK,CAACQ,IAVT,EADF,CAaGL,eAAe,cACd,wCACE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,cAFP,CAGE,EAAE,CAAC,cAHL,CAIE,KAAK,CAAEF,WAJT,CAKE,QAAQ,CAAE,kBAACQ,CAAD,CAAO,CACfP,cAAc,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CACD,CAPH,EADF,cAUE,eACE,OAAO,CAAE,kBAAM,CACbX,KAAK,CAACM,YAAN,CAAmBN,KAAK,CAACO,EAAzB,CAA6B,UAA7B,CAAyCN,WAAzC,EACAG,kBAAkB,CAAC,KAAD,CAAlB,CACD,CAJH,oBAVF,GADc,cAqBd,eACE,OAAO,CAAE,kBAAM,CACbA,kBAAkB,CAAC,SAACQ,SAAD,QAAe,CAACA,SAAhB,EAAD,CAAlB,CACD,CAHH,oBAlCJ,GADF,EADF,CA+CD,CAlDD,CA2DA,cAAeb,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./todo-item.css\";\n\nconst TodoItem = (props) => {\n  const [updatedName, setUpdatedName] = useState(\"\");\n  const [isRenameClicked, setIsRenameClicked] = useState(false);\n  return (\n    <>\n      <div className=\"item-container\">\n        <div\n          className={`item ${props.status === true ? \"completed-item\" : null}`}\n          onClick={() => {\n            props.onItemChange(\n              props.id,\n              \"itemStatus\",\n              props.status ? false : true\n            );\n          }}\n        >\n          {props.name}\n        </div>\n        {isRenameClicked ? (\n          <>\n            <input\n              type=\"text\"\n              name=\"updated-name\"\n              id=\"updated-name\"\n              value={updatedName}\n              onChange={(e) => {\n                setUpdatedName(e.target.value);\n              }}\n            />\n            <button\n              onClick={() => {\n                props.onItemChange(props.id, \"itemName\", updatedName);\n                setIsRenameClicked(false);\n              }}\n            >\n              Rename\n            </button>\n          </>\n        ) : (\n          <button\n            onClick={() => {\n              setIsRenameClicked((prevState) => !prevState);\n            }}\n          >\n            Rename\n          </button>\n        )}\n      </div>\n    </>\n  );\n};\n\nTodoItem.propTypes = {\n  name: PropTypes.string,\n  status: PropTypes.bool,\n  id: PropTypes.string,\n  onItemChange: PropTypes.func,\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}