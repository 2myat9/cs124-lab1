{"ast":null,"code":"var _jsxFileName = \"/Users/htoomyat/Downloads/CS124/cs124-lab2/src/TodoList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport './todo-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: props.isCompletedShown ? props.data.map(item => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          name: item.itemName,\n          id: item.id,\n          status: item.itemStatus,\n          onItemChange: props.onItemChange\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this);\n      }) : props.data.filter(item => item.itemStatus === false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = TodoList;\nTodoList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onItemChange: PropTypes.func,\n  isCompletedShown: PropTypes.bool\n};\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/htoomyat/Downloads/CS124/cs124-lab2/src/TodoList.jsx"],"names":["React","PropTypes","TodoItem","TodoList","props","isCompletedShown","data","map","item","itemName","id","itemStatus","onItemChange","filter","propTypes","array","isRequired","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGA,KAAK,CAACC,gBAAN,GACGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AACvB,4BACE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEA,IAAI,CAACC,QAFb;AAGE,UAAA,EAAE,EAAED,IAAI,CAACE,EAHX;AAIE,UAAA,MAAM,EAAEF,IAAI,CAACG,UAJf;AAKE,UAAA,YAAY,EAAEP,KAAK,CAACQ;AALtB,WACOJ,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CADH,GAYGN,KAAK,CAACE,IAAN,CAAWO,MAAX,CAAmBL,IAAD,IAAUA,IAAI,CAACG,UAAL,KAAoB,KAAhD;AAbN;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD,CApBD;;KAAMR,Q;AAsBNA,QAAQ,CAACW,SAAT,GAAqB;AACnBR,EAAAA,IAAI,EAAEL,SAAS,CAACc,KAAV,CAAgBC,UADH;AAEnBJ,EAAAA,YAAY,EAAEX,SAAS,CAACgB,IAFL;AAGnBZ,EAAAA,gBAAgB,EAAEJ,SAAS,CAACiB;AAHT,CAArB;AAMA,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\nimport './todo-list.css';\n\nconst TodoList = (props) => {\n  return (\n    <>\n      <div className=\"list-container\">\n        {props.isCompletedShown\n          ? props.data.map((item) => {\n              return (\n                <TodoItem\n                  key={item.id}\n                  name={item.itemName}\n                  id={item.id}\n                  status={item.itemStatus}\n                  onItemChange={props.onItemChange}\n                />\n              );\n            })\n          : props.data.filter((item) => item.itemStatus === false)}\n      </div>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onItemChange: PropTypes.func,\n  isCompletedShown: PropTypes.bool\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}